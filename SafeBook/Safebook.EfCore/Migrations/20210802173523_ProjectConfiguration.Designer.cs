// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Safebook.EfCore.EFData;

namespace SafeBook.EfCore.Migrations
{
    [DbContext(typeof(SafeBookDbContext))]
    [Migration("20210802173523_ProjectConfiguration")]
    partial class ProjectConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SafeBook.Domain.Common.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BoardMember"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Member"
                        },
                        new
                        {
                            Id = 4,
                            Name = "RegularUser"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Anonymous"
                        });
                });

            modelBuilder.Entity("SafeBook.Domain.Common.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecondtName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SafeBook.Domain.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 868, DateTimeKind.Local).AddTicks(1520),
                            Description = "fsdfsdDecription of this cool news",
                            Title = "News nr 1"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 872, DateTimeKind.Local).AddTicks(9690),
                            Description = "asdasdasdasd of this cool news",
                            Title = "News nr 2"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 872, DateTimeKind.Local).AddTicks(9748),
                            Description = "rtyrtyrty of this cool news",
                            Title = "News nr 3"
                        });
                });

            modelBuilder.Entity("SafeBook.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 873, DateTimeKind.Local).AddTicks(8177),
                            Description = "kolejny ładny projekt",
                            Title = "Taki fajny projekt"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 873, DateTimeKind.Local).AddTicks(8957),
                            Description = "dobrze kolega mówi, zacny",
                            Title = "A ten jaki ładny"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2021, 8, 2, 19, 35, 22, 873, DateTimeKind.Local).AddTicks(8979),
                            Description = "program ewidentnie im nie leżał",
                            Title = "No, ten to nie siadł"
                        });
                });

            modelBuilder.Entity("SafeBook.Domain.Common.User", b =>
                {
                    b.HasOne("SafeBook.Domain.Common.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SafeBook.Domain.Common.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
